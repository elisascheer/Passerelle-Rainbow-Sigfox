var NodeSDK = require("../index.js");

var nodeSDK = new NodeSDK({
    rainbow: {
        "host": "sandbox.openrainbow.com",
        "mode": "xmpp"
    },
    credentials: {
        "login": "dabernathy@westworld.com",
        "password": "Password_123"
    },
    application: {
        "appID": "",
        "appSecret": ""
    },
    logs: {
        enableConsoleLogs: true,
        enableFileLogs: false,
        file: {
            path: "/var/tmp/rainbowsdk/",
            level: "debug"
        }
    },
    im: {
        sendReadReceipt: true  //false to not send a read receipt automatically
    }
});

nodeSDK.events.on("rainbow_onready", () => {
    console.log("[Rainbow] >>> READY", nodeSDK.state);
});

nodeSDK.events.on("rainbow_onmessageserverreceiptreceived", (receipt) => {
    console.log("[Rainbow] >>> SERVER RECEIPT RECEIVED", receipt);
});

nodeSDK.events.on("rainbow_onmessagereceiptreceived", (receipt) => {
    console.log("[Rainbow] >>> CLIENT RECEIPT RECEIVED", receipt);
});

nodeSDK.events.on("rainbow_onmessagereceiptreadreceived", (receipt) => {
    console.log("[Rainbow] >>> CLIENT RECEIPT READ", receipt);
});

nodeSDK.events.on("rainbow_onmessagereceived", (message) => {
    console.log("[Rainbow] >>> MESSAGE RECEIVED", message);

    if(!message.fromJid.includes(nodeSDK.connectedUser.jid_im)) {
        if( message.type === "chat") {
            let messageSent = nodeSDK.im.sendMessageToJid("hello", message.fromJid);
            console.log("[Rainbow] >>> ANSWER TO USER", messageSent);
        } else {
            let messageSent = nodeSDK.im.sendMessageToBubbleJid("hello bubble", message.fromBubbleJid);
            console.log("[Rainbow] >>> ANSWER TO BUBBLE", messageSent);  
        }
    }
});

nodeSDK.start();
